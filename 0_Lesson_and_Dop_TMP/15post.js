// после подключения БД приступаем к созданию схемы. Схема - это своего рода объект, который будет описывать структуру данных. В корне объекта создали папку models и в неё добавили файл post.js (этот файл)

const mongoose = require('mongoose'); // импортируем mongoose
const Schema = mongoose.Schema; // вытягиваем из него конструктор Schema

const postSchema = new Schema({ // создаем константу и присваиваем в нее вызов конструктора, внутри которого описываем объект - данные, которые нужны в структуре нашего поста, кроме id (присвоит сама БД, т.к. мы его не передаем, создается автоматически для каждой добавляемой сущности) и дата
    text: {
        type: String, // тип - строка
        required: true, // требуется: истина - поле становится обязательным и если его не передать, то будет ошибка
    },
    title: {
        type: String,
        required: true,
    },
    author: {
        type: String,
        required: true,
    },
}, { timestamps: true }); // вторым аргументом в конструктор можно передавать конфигурируемый объект. Мы передали свойство timestamps - это дата, которая будет автоматичски присваиваться каждому посту

const Post = mongoose.model('Post', postSchema); //создаем константу Post. Имя модели пишется с большой буквы, как и имя конструктора и присваиваем ей значение mongoose.model внутрь которого передаем 2 аргумента (имя модели, имя схемы, которую данная модель будет использовать)
// См. пояснения видео #15 07:54

module.exports = Post; // экспортируем модель, для этого используем module.exports, которому присваиваем значение исполльзуемой модели. Теперь возвращаемся в сервер к коду.